// Import the classes we need
const data = require("@iota-pico/data");
const proofOfWork = require("@iota-pico/pow-wasm");

(async function () {
    try {
        console.log("Performing proof of work");

        const trinaryString = "99999999999999999999999999999999999999IOTA9ECO99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999";
        const minWeightMagnitude = 15;

        console.log("Min Weight Magnitude:", minWeightMagnitude);
        console.log("Input Data:", trinaryString);

        const obj = new proofOfWork.CurlProofOfWork();

        // Initialize the proof of work, this might throw and exception if it is using a 
        // method that is not supported
        await obj.initialize();

        let totalTime = 0;
        const numLoops = 10;
        for (let i = 0; i < numLoops; i++) {
            // Record the start time
            const start = Date.now();
            // Perform the proof of work
            const newTrytes = await obj.pow(data.Trytes.create(trinaryString), minWeightMagnitude);
            // Record the end time
            const end = Date.now();

            const newTrytesString = newTrytes.toString();

            // And log the response
            console.log("Output Data:", newTrytesString);

            // Just the nonce
            console.log("Nonce only:", newTrytesString.substr(-81));

            // Time taken
            console.log("Time taken:", end-start, "ms");
            if (i >= 1) {
            totalTime += end-start;
            }
        }
        console.log("Average time:", totalTime / (numLoops - 1), "ms");
    } catch(err) {
        // Or log an error if it failed
        console.log(err);
    }
})();
