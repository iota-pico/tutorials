var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
}
Object.defineProperty(exports, "__esModule", { value: true });
// Import the all-in-one library
const IotaPico = __importStar(require("@iota-pico/lib-nodejs"));
(async function () {
    const consoleLogger = new IotaPico.ConsoleLogger();
    const tran = IotaPico.Transaction.fromTrytes(IotaPico.Trytes.fromString
    const bundle = new IotaPico.Bundle();
    bundle.transactions = [tran];
    consoleLogger.log("blah", bundle);
    // // Create an end point to communicate with the node
    // const networkEndpoint = new IotaPico.NetworkEndPoint("https", "nodes.thetangle.org", 443);
    // const consoleLogger = new IotaPico.ConsoleLogger();
    // // Create a network client from the PAL
    // const networkClient = new IotaPico.NetworkClient(networkEndpoint);
    // // Create an API client using the network client and the API version
    // const apiClient = new IotaPico.ApiClient(networkClient);
    // try {
    //     const pow = new IotaPico.ProofOfWorkNodeJs();
    //     await pow.initialize();
    //     const transactionClient = new IotaPico.TransactionClient(apiClient, pow, undefined, undefined, consoleLogger);
    //     const seed = IotaPico.Hash.fromTrytes(IotaPico.Trytes.fromString("ISHKSEIVNKYFLYAUKVDRAWEUIZJIAAVICHFCIAEEUPSIJJXTLOLVJBZWEISNBVQLQJCSHCAUAFMATP9KN"));
    //     const transfers: IotaPico.Transfer[] = [
    //         IotaPico.Transfer.fromParams(
    //             IotaPico.Address.fromTrytes(IotaPico.Trytes.fromString("NPDGGSIMKPQSMTAHVWFSLEYVISJGTKOBRVBSXPNLJITKVUAFKKISGB9ZDGJRYVMWCSDIZUNXHZGEXJKWYEGEKVC9BY")),
    //             1,
    //             IotaPico.Trytes.fromString("BLAHBLAHBLAHBLAH"),
    //             IotaPico.Tag.fromTrytes(IotaPico.Trytes.fromString("THISISATAG"))
    //         )
    //     ];
    //     // Make the call to the transaction client
    //     const response = await transactionClient.sendTransfer(seed, 1, 15, transfers);                                                                                          
    //     // And log the response
    //     console.log(response);
    // } catch(err) {
    //     // Or log an error if it failed
    //     console.error(err);
    // }
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VuZFRyYW5zZmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2VuZFRyYW5zZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsZ0NBQWdDO0FBQ2hDLGdFQUFrRDtBQUVsRCxDQUFDLEtBQUs7SUFDRixNQUFNLGFBQWEsR0FBRyxJQUFJLFFBQVEsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNuRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxtbkZBQW1uRixDQUFDLENBQUMsQ0FBQztJQUM5ckYsTUFBTSxNQUFNLEdBQUcsSUFBSSxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDckMsTUFBTSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLGFBQWEsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLHNEQUFzRDtJQUN0RCw2RkFBNkY7SUFFN0Ysc0RBQXNEO0lBRXRELDBDQUEwQztJQUMxQyxxRUFBcUU7SUFFckUsdUVBQXVFO0lBQ3ZFLDJEQUEyRDtJQUUzRCxRQUFRO0lBQ1Isb0RBQW9EO0lBQ3BELDhCQUE4QjtJQUU5QixxSEFBcUg7SUFFckgsOEpBQThKO0lBRTlKLCtDQUErQztJQUMvQyx3Q0FBd0M7SUFDeEMscUtBQXFLO0lBQ3JLLGlCQUFpQjtJQUNqQiw4REFBOEQ7SUFDOUQsZ0ZBQWdGO0lBQ2hGLFlBQVk7SUFDWixTQUFTO0lBRVQsaURBQWlEO0lBQ2pELCtLQUErSztJQUUvSyw4QkFBOEI7SUFDOUIsNkJBQTZCO0lBQzdCLGlCQUFpQjtJQUNqQixzQ0FBc0M7SUFDdEMsMEJBQTBCO0lBQzFCLElBQUk7QUFDUixDQUFDLENBQUMsRUFBRSxDQUFDIn0=